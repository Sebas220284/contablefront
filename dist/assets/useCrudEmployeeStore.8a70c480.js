import{bo as d,bg as i,bp as s,bq as c}from"./index.1bb36a93.js";const n=c(),f=d("useCrudEmployeeStore",{state:()=>({loading:!1,typeIdentifications:[],typeAction:"list",employeeData:{},keyList:0,employees:[],totalData:0,totalPage:0,currentPage:1,lastPage:0,formulario:{id:null,name:null,last_name:null,type_identifications_id:null,document_number:null,email:null,company_id:null,cellPhoneNumber:null,residenceAddress:null,residenceDepartament_id:null,residenceCity_id:null,officeDepartament_id:null,officeCity_id:null,paymentMethod_id:null,residenceOffice:null,kind_procedure_id:null,cellPhoneNumberPay:null,banking_entity_id:null,account_number:null,account_type_id:null},departamentsOfResidence:[],citiesOfResidence:[],departamentsOfOffice:[],citiesOfOffice:[],paymentMethods:[],kind_procedures:[],banking_entitys:[],accountTypes:[]}),getters:{},actions:{clearFormulario(){this.formulario={name:null,last_name:null,type_identifications_id:null,document_number:null,email:null,company_id:null,cellPhoneNumber:null,cellPhoneNumberPay:null,residenceAddress:null,residenceDepartament_id:null,residenceCity_id:null,officeDepartament_id:null,officeCity_id:null,paymentMethod_id:null,residenceOffice:null,kind_procedure_id:null,banking_entity_id:null,account_number:null,account_type_id:null}},clonarForm(){for(const t in this.formulario)this.employeeData[t]=this.formulario[t]},async fetchAll(t){this.loading=!0,await i.post("/employee-list",t).then(a=>{this.loading=!1,this.employees=a.data.employees,this.totalData=a.data.totalData,this.totalPage=a.data.totalPage,this.currentPage=a.data.currentPage,this.lastPage=a.data.lastPage}).catch(async a=>{this.loading=!1,console.log(await a)})},async fetchDataForm(t){const a=s();a.isLoading=!0,await i.get("/employee-basicData-dataForm").then(e=>{a.isLoading=!1,this.typeIdentifications=e.data.typeIdentifications,this.departamentsOfResidence=e.data.departamentsOfresidence,this.departamentsOfOffice=e.data.departamentsOfOffice,this.paymentMethods=e.data.paymentMethods,this.kind_procedures=e.data.kind_procedures,this.banking_entitys=e.data.banking_entitys,this.accountTypes=e.data.accountTypes}).catch(async e=>{a.isLoading=!1,console.log(await e)})},async fetchSave(){const t=s();return t.isLoading=!0,await await i.post("/employee-create",this.formulario).then(e=>(t.isLoading=!1,e.data.code===200&&(this.formulario=e.data.data,this.clonarForm(),n.toast("\xC9xito",e.data.message,"success")),e.data.code===500&&n.toast("Error",e.data.message,"danger"),e.data.status===422?(n.toast("Error",e.data.message,"danger"),{error:e.data.errors,status:e.data.status}):{status:e.data.code})).catch(async e=>(t.isLoading=!1,e.response.status===500&&n.toast("Error",e.response.data.message,"danger"),console.log(await e),{status:e.response.status}))},async fetchDelete(t){const a=s();a.isLoading=!0,await i.delete("/employee-delete/"+t).then(e=>{a.isLoading=!1,n.toast("\xC9xito",e.data.message,"success")}).catch(async e=>{a.isLoading=!1,console.log(await e)})},async fetchInfoEmployee(t){const a=s();if(t!==this.employeeData.id)a.isLoading=!0,await i.get(`/employee-info/${t}`).then(async e=>{a.isLoading=!1,this.employeeData.id=t,this.formulario=await e.data.data;let o=this.formulario.residenceCity_id,l=this.formulario.officeCity_id;await this.getCitiesOfResidence(),await this.getCitiesOffice(),this.formulario.residenceCity_id=o,this.formulario.officeCity_id=l,this.clonarForm()}).catch(async e=>{a.isLoading=!1,console.log(await e)});else for(const e in this.employeeData)this.formulario[e]=this.employeeData[e]},async getCitiesOfResidence(){const t=s();t.isLoading=!0,await i.post("/invoice-cities",{departament_id:this.formulario.residenceDepartament_id}).then(a=>{this.formulario.residenceCity_id=null,t.isLoading=!1,this.citiesOfResidence=a.data.cities}).catch(async a=>{this.formulario.residenceCity_id=null,t.isLoading=!1,console.log(await a)})},async getCitiesOffice(){const t=s();t.isLoading=!0,await i.post("/invoice-cities",{departament_id:this.formulario.officeDepartament_id}).then(a=>{this.formulario.officeCity_id=null,t.isLoading=!1,this.citiesOfOffice=a.data.cities}).catch(async a=>{this.formulario.officeCity_id=null,t.isLoading=!1,console.log(await a)})}}});export{f as u};

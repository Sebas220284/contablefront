import{bo as r,bg as e,bp as i,bq as n}from"./index.1bb36a93.js";const s=n(),g=r("useCrudChargeCatalogStore",{state:()=>({loading:!1,typeAction:"list",chargeCatalogData:{},keyList:0,chargeCatalogs:[],totalData:0,totalPage:0,currentPage:1,ledgerAccountGroup:[],lastPage:0,formulario:{name:"",company_id:null,ledger_account_group_id:null}}),getters:{},actions:{clearFormulario(){this.formulario={name:"",company_id:null,ledger_account_group_id:null}},clonarForm(){for(const o in this.formulario)this.chargeCatalogData[o]=this.formulario[o]},async fetchAll(o){this.loading=!0,await e.post("/chargeCatalog-list",o).then(t=>{this.loading=!1,this.chargeCatalogs=t.data.chargeCatalogs,this.totalData=t.data.totalData,this.totalPage=t.data.totalPage,this.currentPage=t.data.currentPage,this.lastPage=t.data.lastPage}).catch(async t=>{this.loading=!1,console.log(await t)})},async fetchSave(){const o=i();return o.isLoading=!0,await await e.post("/chargeCatalog-create",this.formulario).then(a=>(o.isLoading=!1,a.data.code===200&&(this.clonarForm(),this.clearFormulario(),s.toast("\xC9xito",a.data.message,"success")),a.data.code===500&&s.toast("Error",a.data.message,"danger"),a.data.status===422?(s.toast("Error",a.data.message,"danger"),{error:a.data.errors,status:a.data.status}):{status:a.data.code,formedit:a.data.data})).catch(async a=>(o.isLoading=!1,a.response.status===500&&s.toast("Error",a.response.data.message,"danger"),console.log(await a),a.response.status))},async fetchDelete(o){const t=i();t.isLoading=!0,await e.delete("/chargeCatalog-delete/"+o).then(a=>{t.isLoading=!1,s.toast("\xC9xito",a.data.message,"success")}).catch(async a=>{t.isLoading=!1,console.log(await a)})},async fetchInfo(o){const t=i();if(o!==this.chargeCatalogData.id)t.isLoading=!0,await e.get(`/chargeCatalog-info/${o}`).then(async a=>{t.isLoading=!1,this.chargeCatalogData.id=o,this.formulario=await a.data.data,this.clonarForm()}).catch(async a=>{t.isLoading=!1,console.log(await a)});else for(const a in this.chargeCatalogData)this.formulario[a]=this.chargeCatalogData[a]},async fetchDataForm(){const o=i();o.isLoading=!0,await e.get("/chargeCatalog-dataForm").then(t=>{o.isLoading=!1,this.ledgerAccountGroup=t.data.ledgerAccountGroup}).catch(async t=>{o.isLoading=!1,console.log(await t)})}}});export{g as u};
